{"version":3,"file":"fit.js","sources":["../src/utils.js","../src/session.js","../src/index.js"],"sourcesContent":["/**\r\n * Calculate statistics on a vector data\r\n * @param values {[Float]} Values\r\n * @return {Object} the converted value with unit\r\n */\r\nexport function getStatistics(values){\r\n\tvar stats = {};\r\n\tif(values && values.length>0){\r\n\t\tstats.min = Math.min.apply(null,values.filter(function(elt){\r\n\t\t\treturn elt!=null;\r\n\t\t}));\r\n\t\tstats.max = Math.max.apply(null,values.filter(function(elt){\r\n\t\t\treturn elt!=null;\r\n\t\t}));\r\n\t\tstats.sum = values.reduce(function(a, b) { return a + b });\r\n\t\tstats.mean = stats.sum / values.length;\r\n\t}\r\n\r\n\treturn stats;\r\n}\r\n\r\n/**\r\n * Calculate SMA on a vector data\r\n * @param n {Integer} number of values\r\n * @return {Object} the converted values\r\n */\r\nexport function getSMA(values, n){\r\n\t\r\n\tvar sma = [];\r\n\tsma.push(values[0]);\r\n\tfor(var i=1;i<values.length;i++){\r\n\t\tvar value;\r\n\t\tif(i<n){\r\n\t\t\tvalue = values.slice(0,i+1).reduce(function(a, b) { return a + b })/values.slice(0,i+1).length;\r\n\t\t}else{\r\n\t\t\tvalue = values.slice(i+1-n,i+1).reduce(function(a, b) { return a + b })/n;\r\n\t\t\t//console.log(values.toString()+\" \"+values.slice(i+1-n,i+1).length)+\"\\n\";\r\n\t\t}\r\n\t\tsma.push(value);\r\n\t}\r\n\r\n\treturn sma;\r\n}","import {getStatistics} from './utils.js';\r\nimport {getSMA} from './utils.js';\r\n\r\n\r\n\r\nexport function createSession(name, smooth_factor) {\r\n\r\n\treturn {\r\n\t\tname : name,\r\n\t\ttype : 0,\r\n\t\tcoordinates : {},\r\n\t\ttimes : {},\r\n\t\tdurations : {},\r\n\t\tdistances : {},\r\n\t\t//contains speeds, heart rates, altitudes, cadences, temperatures,...\r\n\t\tparameters : {},\r\n\t\tintervals : {},\r\n\t\t\r\n\t\t/**\r\n\t\t* Calculate durations\r\n\t\t*/\r\n\t\tcalculateDurations : function(){\r\n\t\t\tif(this.times){\r\n\t\t\t\tvar data = [];\r\n\t\t\t\tthis.times.data.forEach(function(elt,index,array){\r\n\t\t\t\t\tdata.push(new Date(elt)-new Date(array[0]));\r\n\t\t    \t});\r\n\t\t\t\t\r\n\t\t\t\tthis.durations= {\r\n\t\t\t\t\tname:\"Durations\",\r\n\t\t\t\t\tdata : data/*,\r\n\t\t\t\t\tstatistics : getStatistics(data)*/\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tcalculateDistances : function(){\r\n\t\t\t/**\r\n\t         * Calculates distance between 2 points using Haversine formula\r\n\t         * @param lat1 {Double} Latitude of point 1\r\n\t         * @param lon1 {Double} Longitude of point 1 \r\n\t         * @param lat2 {Double} Latitude of point 2 \r\n\t         * @param lon2 {Double} Longitude of point 2 \r\n\t         * @return {Double} distance in km\r\n\t         */\r\n\t        var haversine = function(lat1, lon1, lat2, lon2) {\r\n\t            var R = 6372.8;\r\n\t            var dLat = (lat2 - lat1)*(Math.PI / 180);\r\n\t            var dLon = (lon2 - lon1)*(Math.PI / 180);\r\n\t            lat1 = lat1*(Math.PI / 180);\r\n\t            lat2 = lat2*(Math.PI / 180);\r\n\r\n\t            var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(lat2);\r\n\t            var c = 2 * Math.asin(Math.sqrt(a));\r\n\t            return R * c;\r\n\t        }\r\n\t         \r\n\t        var data = [];\r\n\t        this.coordinates.forEach(function(elt,index,array){\r\n\t        \tif(index>0){\r\n\t        \t\tdata.push(data[index-1]+haversine(array[index-1][1],array[index-1][0],array[index][1],array[index][0]));\r\n\t        \t}else{\r\n\t        \t\tdata.push(0);\r\n\t        \t}\r\n\t        });\r\n\t        \r\n\t        var smooth = 5;\r\n\t        if(smooth_factor!=null){\r\n\t        \tsmooth = smooth_factor;\r\n\t        }\r\n\t        this.distances= {\r\n\t\t\t\tname:\"Distances\",\r\n\t\t\t\tdata : smooth===0?data:getSMA(data,smooth)\r\n\t\t\t};\r\n\t\t},\r\n\t\t\r\n\t\tcalculateSpeeds : function(){\r\n\t\t\tvar distances = this.distances.data;\r\n\t    \tvar times = this.times.data;\r\n\t    \t\r\n\t    \tif(times && distances){\r\n\t    \t\tvar data = [];\t    \t\t \r\n\t\t    \ttimes.forEach(function(elt,index,array){\r\n\t\t    \t\tif(index == 0){\r\n\t\t    \t\t\tdata.push(null);\r\n\t\t    \t\t}else{\r\n\t\t    \t\t\tvar speed = (distances[index]-distances[index-1])/(new Date(times[index])-new Date(times[index-1]))* 1000 * 60 * 60;\r\n\t\t    \t\t\tif(isNaN(speed) || !isFinite(speed)){speed=null;}\r\n\t\t\t\t    \tdata.push(speed);\r\n\t\t    \t\t}\r\n\t\t    \t});\r\n\t\t    \t\r\n\t\t    \tthis.speeds= {\r\n\t\t\t\t\tname:\"Speeds\",\r\n\t\t\t\t\tdata : data,\r\n\t\t\t\t\tstatistics : getStatistics(data)\r\n\t\t\t\t};\r\n\t    \t}\t\r\n\t\t},\r\n\t\t\r\n\t\tcalculateIntervals : function(training){\r\n\t\t\t//training example : 15' - 10 x 200m/45\" - 3' - 10 x 200m/45\" - 10'\r\n\t    \t\r\n\t\t\t\r\n\t\t\t//Have to use regex to parse training string\r\n\t\t\t\r\n\t    \tvar timeToSec = function(time){\r\n\t    \t\tvar indexM = time.indexOf(\"'\");\r\n\t    \t\tvar indexS = time.indexOf(\"\\\"\");\r\n\t    \t\tvar duration = 0;\r\n\r\n\t    \t\tif(indexS>0 && indexM>0){\r\n\t    \t\t\tduration = parseInt(time.substring(0,indexM))*60 + parseInt(time.substring(indexM+1,indexS));\r\n\t    \t\t}else{\r\n\t    \t\t\tif(indexM>0){\r\n\t\t    \t\t\tduration = parseInt(time.substring(0,indexM))*60;\r\n\t\t    \t\t}\r\n\t    \t\t\tif(indexS>0){\r\n\t\t    \t\t\tduration = parseInt(time.substring(0,indexS));\r\n\t\t    \t\t}\r\n\t    \t\t}\r\n\t    \t\treturn duration;\r\n\t    \t}\r\n\t    \tvar intt = [];\r\n\t    \tvar types = [];\r\n\t    \tvar phases = training.split(\"-\");\r\n\r\n\t    \tfor(var i=0;i<phases.length;i++){\r\n\t    \t\tvar sets = phases[i].split(\"x\");\r\n\t    \t\t\r\n\t    \t\tif(sets.length==2){\r\n\t    \t\t\t//10 x 200m/45\"\r\n\t    \t\t\tvar repetition = parseInt(sets[0]);\r\n\t    \t\t\tvar mode = sets[1].split(\"/\");\r\n\t    \t\t\tif(mode.length>1){\r\n\t    \t\t\t\tvar fast = mode[0];\r\n\t\t    \t\t\tvar slow = mode[1];\r\n\t\t    \t\t\tfor (var j=0;j<repetition;j++){\r\n\t\t    \t\t\t\tfast.indexOf(\"m\")<0?intt.push(timeToSec(fast)):intt.push(fast);\r\n\t\t    \t\t\t\tslow.indexOf(\"m\")<0?intt.push(timeToSec(slow)):intt.push(slow);\r\n\t\t    \t\t\t\ttypes.push(\"I\");\r\n\t\t    \t\t\t\ttypes.push(\"R\");\r\n\t\t    \t\t\t}\r\n\t    \t\t\t}else{\r\n\t    \t\t\t\t//10 x 1000m or 10 x 1'\r\n\t    \t\t\t\tfor (var j=0;j<repetition;j++){\r\n\t    \t\t\t\t\tmode[0].indexOf(\"m\")<0?intt.push(timeToSec(mode[0])):intt.push(mode[0]);\r\n\t    \t\t\t\t\ttypes.push(\"I\");\r\n\t    \t\t\t\t}\r\n\t    \t\t\t}\r\n\t    \t\t\t\r\n\t    \t\t}else{\r\n\t    \t\t\t//1000m or 15'\r\n\t    \t\t\tphases[i].indexOf(\"m\")<0?intt.push(timeToSec(phases[i])):intt.push(phases[i]);\r\n\t    \t\t\ttypes.push(\"?\");\r\n\t    \t\t\t\r\n\t    \t\t}\r\n\t    \t}\r\n\t    \t\r\n\t    \tvar durations = this.durations.data;\r\n    \t\tvar distances = this.distances.data;\r\n    \t\tvar times = this.times;\r\n    \t\tvar k =0;\r\n    \t\tvar start = 0;\r\n    \t\tvar intervals = [];\r\n    \t\tvar step, dist = false;\r\n\r\n    \t\tif(isNaN(intt[k])){dist=true;}\r\n    \t\tdist?step=parseInt(intt[k].split[0]):step=intt[k]*1000;\r\n    \t\r\n\t    \tfor(var i=0;i<durations.length;i++){\r\n\t    \t\t\r\n\t    \t\tif(dist){\r\n\t    \t\t\t//console.log(step);\r\n\t    \t\t\tif(step>distances[i]){\r\n\t    \t\t\t\tcontinue;\r\n\t    \t\t\t}else{\r\n\t    \t\t\t\tvar interval = {};\r\n\t    \t   \t\t\tinterval.start = start;\r\n\t    \t   \t\t\tinterval.end = i;\r\n\t    \t   \t\t\tinterval.type= types[k];\r\n\t    \t\t\t\tinterval.distance = distances[i]-distances[start];\r\n\t    \t\t\t\tinterval.duration = durations[i]-durations[start];\r\n\t    \t   \t\t\tintervals.push(interval);\r\n\r\n\t\t    \t\t\tstart=i;\r\n\t\t    \t\t\tk=k+1;\r\n\t\t    \t\t\tif(k==intt.length){\r\n\t\t    \t\t\t\tbreak;\r\n\t\t    \t\t\t}\r\n\t\t    \t\t\tif(isNaN(intt[k])){\r\n\t\t    \t\t\t\tdist=true;\r\n\t\t    \t\t\t\tstep=distances[interval.end]+parseInt(intt[k].split()[0])/1000\r\n\t\t    \t\t\t}else{\r\n\t\t    \t\t\t\tdist=false;\r\n\t\t    \t\t\t\tstep=durations[interval.end]+intt[k]*1000;\r\n\t\t    \t\t\t}\r\n\t\t    \t\t}\r\n\t    \t\t}else{\r\n\t    \t\t\tif(step>durations[i]){\r\n\t\t    \t\t\tcontinue;\r\n\t\t    \t\t}else{\r\n\t\t    \t\t\tvar interval = {};\r\n\t    \t   \t\t\tinterval.start = start;\r\n\t    \t   \t\t\tinterval.end = i;\r\n\t    \t   \t\t\tinterval.type= types[k];\r\n\t    \t\t\t\tinterval.distance = distances[i]-distances[start];\r\n\t    \t\t\t\tinterval.duration = durations[i]-durations[start];\r\n\t    \t   \t\t\tintervals.push(interval);\r\n\t    \t   \t\t\t\r\n\t\t    \t\t\tstart=i;\r\n\t\t    \t\t\tk=k+1;\r\n\t\t    \t\t\tif(k==intt.length){\r\n\t\t    \t\t\t\tbreak;\r\n\t\t    \t\t\t}\r\n\t\t    \t\t\tif(isNaN(intt[k])){\r\n\t\t    \t\t\t\tdist=true;\r\n\t\t    \t\t\t\tstep=distances[interval.end]+parseInt(intt[k].split()[0])/1000\r\n\t\t    \t\t\t}else{\r\n\t\t    \t\t\t\tdist=false;\r\n\t\t    \t\t\t\tstep=durations[interval.end]+intt[k]*1000;\r\n\t\t    \t\t\t}\r\n\t\t    \t\t}\r\n\t    \t\t}\r\n\t    \t\t\r\n\t    \t}\r\n\r\n\t    \tvar interval = {};\r\n   \t\t\tinterval.start = start;\r\n   \t\t\tinterval.type = types[k];\r\n\t\t\tinterval.distance = distances[distances.length-1]-distances[start];\r\n\t\t\tinterval.duration = durations[durations.length-1]-durations[start];\r\n   \t\t\tinterval.end = durations.length-1;\r\n   \t\t\tintervals.push(interval);\r\n\r\n   \t\t\t\r\n   \t\t\tfor(var i=0;i<intervals.length;i++){\r\n   \t\t\t\tvar statistics = {};\r\n   \t\t\t\tif(this.speeds){\r\n   \t\t\t\t\tvar data = this.speeds.data.filter(function(elt,index){\r\n   \t\t\t\t\t\treturn index>intervals[i].start && index<intervals[i].end;\r\n   \t\t\t\t\t});\r\n   \t\t\t\t\tstatistics.speeds = getStatistics(data);\r\n   \t\t\t\t}\r\n   \t\t\t\tfor(var param in this.parameters){\r\n   \t\t\t\t\tvar data = this.parameters[param].data.filter(function(elt,index){\r\n   \t\t\t\t\t\treturn index>intervals[i].start && index<intervals[i].end;\r\n   \t\t\t\t\t});\r\n   \t\t\t\t\tstatistics[param] = getStatistics(data);\r\n   \t\t\t\t}\r\n   \t\t\t\t/*if(this.parameters.altitudes){\r\n   \t\t\t\t\t\r\n   \t\t\t\t}\r\n   \t\t\t\t\r\n\t\t\t\tif(this.parameters.heartrates){\r\n\t\t\t\t\tvar data = this.parameters.heartrates.data.filter(function(elt,index){\r\n   \t\t\t\t\t\treturn index>intervals[i].start && index<intervals[i].end;\r\n   \t\t\t\t\t});\r\n\t\t\t\t\tstatistics.heartrates = getStatistics(data);\r\n\t\t\t\t}\r\n\t\t\t\tif(this.parameters.cadences){\r\n\t\t\t\t\tvar data = this.parameters.cadences.data.filter(function(elt,index){\r\n   \t\t\t\t\t\treturn index>intervals[i].start && index<intervals[i].end;\r\n   \t\t\t\t\t});\r\n\t\t\t\t\tstatistics.cadences = getStatistics(data);\r\n\t\t\t\t}*/\r\n\t\t\t\tintervals[i].statistics = statistics;\r\n   \t\t\t}\r\n   \t\t\tthis.intervals = intervals;\r\n\t\t},\r\n\t\t\r\n\t\tfromGeoJSON : function(geojson){\r\n\t\t\t\r\n\t\t\tif(geojson.features[0].geometry.coordinates){\r\n\t\t\t\tthis.coordinates = geojson.features[0].geometry.coordinates;\r\n\t\t\t\tthis.calculateDistances();\r\n\t\t\t\t\r\n\t\t\t\tif(this.coordinates[0][2]){\r\n\t\t\t\t\tvar data = [];\r\n\t\t\t\t\tgeojson.features[0].geometry.coordinates.forEach(function(elt,index,array){data.push(elt[2]);});\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.parameters.altitudes= {\r\n\t\t\t\t\t\tname:\"Altitudes\",\r\n\t\t\t\t\t\tdata : data,\r\n\t\t\t\t\t\tstatistics : getStatistics(data)\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t    \tif(geojson.features[0].properties.times){\r\n\t    \t\tthis.times= {\r\n\t\t\t\t\tname:\"Times\",\r\n\t\t\t\t\tdata : geojson.features[0].properties.times\r\n\t\t\t\t};\t    \t\t\r\n\t    \t\tthis.calculateDurations();\r\n\t    \t}\r\n\t    \t\r\n\t    \tif(this.distances && this.times){\r\n\t    \t\tthis.calculateSpeeds();\r\n\t    \t}\r\n\t    \t\r\n\t    \tif(geojson.features[0].properties.heartrates){\r\n\t    \t\tthis.parameters.heartrates= {\r\n\t\t\t\t\tname:\"Heartrates\",\r\n\t\t\t\t\tdata : geojson.features[0].properties.heartrates,\r\n\t\t\t\t\tstatistics : getStatistics(geojson.features[0].properties.heartrates)\r\n\t\t\t\t};\r\n\t    \t}\r\n\t    \t\r\n\t    \tif(geojson.features[0].properties.cadences){\r\n\t    \t\tthis.parameters.cadences= {\r\n\t\t\t\t\tname:\"Cadences\",\r\n\t\t\t\t\tdata : geojson.features[0].properties.cadences,\r\n\t\t\t\t\tstatistics : getStatistics(geojson.features[0].properties.cadences)\r\n\t\t\t\t};\r\n\t    \t}\r\n\t    \t\r\n\t    \treturn this;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/* https://medium.com/javascript-scene/javascript-factory-functions-with-es6-4d224591a8b1\r\nconst createUser = ({\r\n  userName = 'Anonymous',\r\n  avatar = 'anon.png'\r\n} = {}) => ({\r\n  userName,\r\n  avatar\r\n});\r\nconsole.log(\r\n  // { userName: \"echo\", avatar: 'anon.png' }\r\n  createUser({ userName: 'echo' }),\r\n  // { userName: \"Anonymous\", avatar: 'anon.png' }\r\n  createUser()\r\n);*/","export function sum(a,b){\r\n\treturn a+b;\r\n}\r\n\r\n//import MyClass from './session';\r\nexport {createSession} from './session';\r\n//export {createSession};"],"names":[],"mappings":"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"}