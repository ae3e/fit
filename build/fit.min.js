var fit=function(t){"use strict";function e(t){var e={};return t&&t.length>0&&(e.min=Math.min.apply(null,t.filter(function(t){return null!=t})),e.max=Math.max.apply(null,t.filter(function(t){return null!=t})),e.sum=t.reduce(function(t,e){return t+e}),e.mean=e.sum/t.length),e}function s(t,e){var s=[];s.push(t[0]);for(var a=1;a<t.length;a++){var r;r=e>a?t.slice(0,a+1).reduce(function(t,e){return t+e})/t.slice(0,a+1).length:t.slice(a+1-e,a+1).reduce(function(t,e){return t+e})/e,s.push(r)}return s}function a(t,a){return{name:t,type:0,coordinates:{},times:{},durations:{},distances:{},parameters:{},intervals:[],calculateDurations:function(){if(this.times){var t=[];this.times.data.forEach(function(e,s,a){t.push(new Date(e)-new Date(a[0]))}),this.durations={name:"Durations",data:t}}},calculateDistances:function(){var t=function(t,e,s,a){var r=6372.8,n=(s-t)*(Math.PI/180),i=(a-e)*(Math.PI/180);t*=Math.PI/180,s*=Math.PI/180;var u=Math.sin(n/2)*Math.sin(n/2)+Math.sin(i/2)*Math.sin(i/2)*Math.cos(t)*Math.cos(s),o=2*Math.asin(Math.sqrt(u));return r*o},e=[];this.coordinates.forEach(function(s,a,r){a>0?e.push(e[a-1]+t(r[a-1][1],r[a-1][0],r[a][1],r[a][0])):e.push(0)});var r=5;null!=a&&(r=a),this.distances={name:"Distances",data:0===r?e:s(e,r)}},calculateSpeeds:function(){var t=this.distances.data,s=this.times.data;if(s&&t){var a=[];s.forEach(function(e,r,n){if(0==r)a.push(null);else{var i=(t[r]-t[r-1])/(new Date(s[r])-new Date(s[r-1]))*1e3*60*60;(isNaN(i)||!isFinite(i))&&(i=null),a.push(i)}}),this.speeds={name:"Speeds",data:a,statistics:e(a)}}},calculateIntervals:function(t){for(var s=/(^(\d+')|(\d+")|(\d+'\d+"))|(^\d+m)/,a=function(t){var e=t.indexOf("'"),s=t.indexOf('"'),a=0;return s>0&&e>0?a=60*parseInt(t.substring(0,e))+parseInt(t.substring(e+1,s)):(e>0&&(a=60*parseInt(t.substring(0,e))),s>0&&(a=parseInt(t.substring(0,s)))),a},r=[],n=[],i=t.split("-"),u=0;u<i.length;u++){var o=i[u].split("x");if(2==o.length){if(!Number.isInteger(parseInt(o[0])))return void console.log("Number of repetitions is not an integer (Phase "+u+")");var c=parseInt(o[0]),h=o[1].split("/");if(h.length>1){if(!s.test(h[0])||!s.test(h[1]))return void console.log("Fast or slow interval to repeat is incorrect (Phase "+u+")");for(var p=h[0],l=h[1],d=0;c>d;d++)p.indexOf("m")<0?r.push(a(p)):r.push(p),l.indexOf("m")<0?r.push(a(l)):r.push(l),n.push("I"),n.push("R")}else{if(!s.test(h[0]))return void console.log("Interval to repeat is incorrect (Phase "+u+")");for(var d=0;c>d;d++)h[0].indexOf("m")<0?r.push(a(h[0])):r.push(h[0]),n.push("I")}}else{if(!s.test(i[u]))return void console.log("Phase "+u+" is incorrect");switch(i[u].indexOf("m")<0?r.push(a(i[u])):r.push(i[u]),u){case 0:n.push("W");break;case i.length-1:n.push("C");break;default:u%2==0?n.push("R"):n.push("I")}}}var f,m=this.durations.data,v=this.distances.data,g=(this.times,0),I=0,M=[],N=!1;isNaN(r[g])&&(N=!0),f=N?parseInt(r[g].split[0]):1e3*r[g];for(var u=0;u<m.length;u++)if(N){if(f>v[u])continue;var b={};if(b.start=I,b.end=u,b.type=n[g],b.distance=v[u]-v[I],b.duration=m[u]-m[I],M.push(b),I=u,g+=1,g==r.length)break;isNaN(r[g])?(N=!0,f=v[b.end]+parseInt(r[g].split()[0])/1e3):(N=!1,f=m[b.end]+1e3*r[g])}else{if(f>m[u])continue;var b={};if(b.start=I,b.end=u,b.type=n[g],b.distance=v[u]-v[I],b.duration=m[u]-m[I],M.push(b),I=u,g+=1,g==r.length)break;isNaN(r[g])?(N=!0,f=v[b.end]+parseInt(r[g].split()[0])/1e3):(N=!1,f=m[b.end]+1e3*r[g])}var b={};b.start=I,b.type=n[g],b.distance=v[v.length-1]-v[I],b.duration=m[m.length-1]-m[I],b.end=m.length-1,M.push(b);for(var u=0;u<M.length;u++){var D={};if(this.speeds){var x=this.speeds.data.filter(function(t,e){return e>M[u].start&&e<M[u].end});D.speeds=e(x)}for(var y in this.parameters){var x=this.parameters[y].data.filter(function(t,e){return e>M[u].start&&e<M[u].end});D[y]=e(x)}M[u].statistics=D}this.intervals=M},fromGeoJSON:function(t){if(t.features[0].geometry.coordinates&&(this.coordinates=t.features[0].geometry.coordinates,this.calculateDistances(),this.coordinates[0][2])){var s=[];t.features[0].geometry.coordinates.forEach(function(t,e,a){s.push(t[2])}),this.parameters.altitudes={name:"Altitudes",data:s,statistics:e(s)}}return t.features[0].properties.times&&(this.times={name:"Times",data:t.features[0].properties.times},this.calculateDurations()),this.distances&&this.times&&this.calculateSpeeds(),t.features[0].properties.heartrates&&(this.parameters.heartrates={name:"Heartrates",data:t.features[0].properties.heartrates,statistics:e(t.features[0].properties.heartrates)}),t.features[0].properties.cadences&&(this.parameters.cadences={name:"Cadences",data:t.features[0].properties.cadences,statistics:e(t.features[0].properties.cadences)}),this}}}function r(t,e){return t+e}return t.sum=r,t.createSession=a,t}({});