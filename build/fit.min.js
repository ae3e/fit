var fit=function(t){"use strict";function e(t){var e={};return t&&t.length>0&&(e.min=Math.min.apply(null,t.filter(function(t){return null!=t})),e.max=Math.max.apply(null,t.filter(function(t){return null!=t})),e.sum=t.reduce(function(t,e){return t+e}),e.mean=e.sum/t.length),e}function s(t,e){var s=[];s.push(t[0]);for(var a=1;a<t.length;a++){var r;r=e>a?t.slice(0,a+1).reduce(function(t,e){return t+e})/t.slice(0,a+1).length:t.slice(a+1-e,a+1).reduce(function(t,e){return t+e})/e,s.push(r)}return s}function a(t,a){return{name:t,type:0,coordinates:{},times:{},durations:{},distances:{},parameters:{},intervals:{},calculateDurations:function(){if(this.times){var t=[];this.times.data.forEach(function(e,s,a){t.push(new Date(e)-new Date(a[0]))}),this.durations={name:"Durations",data:t,statistics:e(t)}}},calculateDistances:function(){var t=function(t,e,s,a){var r=6372.8,n=(s-t)*(Math.PI/180),i=(a-e)*(Math.PI/180);t*=Math.PI/180,s*=Math.PI/180;var u=Math.sin(n/2)*Math.sin(n/2)+Math.sin(i/2)*Math.sin(i/2)*Math.cos(t)*Math.cos(s),c=2*Math.asin(Math.sqrt(u));return r*c},e=[];this.coordinates.forEach(function(s,a,r){a>0?e.push(e[a-1]+t(r[a-1][1],r[a-1][0],r[a][1],r[a][0])):e.push(0)});var r=5;null!=a&&(r=a),this.distances={name:"Distances",data:0===r?e:s(e,r)}},calculateSpeeds:function(){var t=this.distances.data,s=this.times.data;if(s&&t){var a=[];s.forEach(function(e,r,n){if(0==r)a.push(null);else{var i=(t[r]-t[r-1])/(new Date(s[r])-new Date(s[r-1]))*1e3*60*60;(isNaN(i)||!isFinite(i))&&(i=null),a.push(i)}}),this.speeds={name:"Speeds",data:a,statistics:e(a)}}},calculateIntervals:function(t){for(var s=function(t){var e=t.indexOf("'"),s=t.indexOf('"'),a=0;return s>0&&e>0?a=60*parseInt(t.substring(0,e))+parseInt(t.substring(e+1,s)):(e>0&&(a=60*parseInt(t.substring(0,e))),s>0&&(a=parseInt(t.substring(0,s)))),a},a=[],r=[],n=t.split("-"),i=0;i<n.length;i++){var u=n[i].split("x");if(2==u.length){var c=parseInt(u[0]),h=u[1].split("/");if(h.length>1)for(var d=h[0],o=h[1],f=0;c>f;f++)d.indexOf("m")<0?a.push(s(d)):a.push(d),o.indexOf("m")<0?a.push(s(o)):a.push(o),r.push("I"),r.push("R");else for(var f=0;c>f;f++)h[0].indexOf("m")<0?a.push(s(h[0])):a.push(h[0]),r.push("I")}else n[i].indexOf("m")<0?a.push(s(n[i])):a.push(n[i]),r.push("?")}var p,l=this.durations.data,m=this.distances.data,v=(this.times,0),g=0,I=[],M=!1;isNaN(a[v])&&(M=!0),p=M?parseInt(a[v].split[0]):1e3*a[v];for(var i=0;i<l.length;i++)if(M){if(p>m[i])continue;var D={};if(D.start=g,D.end=i,D.type=r[v],D.distance=m[i]-m[g],D.duration=l[i]-l[g],I.push(D),g=i,v+=1,v==a.length)break;isNaN(a[v])?(M=!0,p=m[D.end]+parseInt(a[v].split()[0])/1e3):(M=!1,p=l[D.end]+1e3*a[v])}else{if(p>l[i])continue;var D={};if(D.start=g,D.end=i,D.type=r[v],D.distance=m[i]-m[g],D.duration=l[i]-l[g],I.push(D),g=i,v+=1,v==a.length)break;isNaN(a[v])?(M=!0,p=m[D.end]+parseInt(a[v].split()[0])/1e3):(M=!1,p=l[D.end]+1e3*a[v])}var D={};D.start=g,D.type=r[v],D.distance=m[m.length-1]-m[g],D.duration=l[l.length-1]-l[g],D.end=l.length-1,I.push(D);for(var i=0;i<I.length;i++){var x={};if(this.altitudes){var y=this.altitudes.data.filter(function(t,e){return e>I[i].start&&e<I[i].end});x.altitudes=e(y)}if(this.speeds){var y=this.speeds.data.filter(function(t,e){return e>I[i].start&&e<I[i].end});x.speeds=e(y)}if(this.parameters.heartrates){var y=this.parameters.heartrates.data.filter(function(t,e){return e>I[i].start&&e<I[i].end});x.heartrates=e(y)}if(this.parameters.cadences){var y=this.parameters.cadences.data.filter(function(t,e){return e>I[i].start&&e<I[i].end});x.cadences=e(y)}I[i].statistics=x}this.intervals=I},fromGeoJSON:function(t){if(t.features[0].geometry.coordinates&&(this.coordinates=t.features[0].geometry.coordinates,this.calculateDistances(),this.coordinates[0][2])){var s=[];t.features[0].geometry.coordinates.forEach(function(t,e,a){s.push(t[2])}),this.altitudes={name:"Altitudes",data:s,statistics:e(s)}}return t.features[0].properties.times&&(this.times={name:"Times",data:t.features[0].properties.times},this.calculateDurations()),this.distances&&this.times&&this.calculateSpeeds(),t.features[0].properties.heartrates&&(this.parameters.heartrates={name:"Heartrates",data:t.features[0].properties.heartrates,statistics:e(t.features[0].properties.heartrates)}),t.features[0].properties.cadences&&(this.parameters.cadences={name:"Cadences",data:t.features[0].properties.cadences,statistics:e(t.features[0].properties.cadences)}),this}}}function r(t,e){return t+e}return t.sum=r,t.createSession=a,t}({});